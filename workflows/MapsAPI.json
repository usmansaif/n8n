{
  "name": "MapsAPI",
  "nodes": [
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create database if not exists\nCREATE DATABASE IF NOT EXISTS gladbit_leads;\n\n-- Switch to it\nUSE gladbit_leads;\n\n-- Create a generic business listings table if missing\nCREATE TABLE IF NOT EXISTS business_listings (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  business_type VARCHAR(150) NULL,\n  address TEXT NULL,\n  city VARCHAR(100) NULL,\n  state VARCHAR(100) NULL,\n  country VARCHAR(100) NULL,\n  postal_code VARCHAR(20) NULL,\n  plus_code VARCHAR(100) NULL,\n  latitude DECIMAL(10, 7) NULL,\n  longitude DECIMAL(10, 7) NULL,\n  map_url TEXT NULL,\n  phone VARCHAR(100) NULL,\n  email VARCHAR(255) NULL,\n  website TEXT NULL,\n  rating DECIMAL(2, 1) NULL,\n  total_reviews INT NULL,\n  place_id VARCHAR(255) UNIQUE,\n  source VARCHAR(100) DEFAULT 'Google Places',\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n",
        "options": {}
      },
      "id": "0c1eee25-0b45-4ff8-8a95-e3d2e9f7ee4f",
      "name": "Execute a SQL query",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -2112,
        -704
      ],
      "typeVersion": 2.5,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "wWj9yt1coEKbQPqu",
          "name": "MySQL-General-Docker"
        }
      }
    },
    {
      "parameters": {
        "content": "## Create Database Schema",
        "height": 352,
        "width": 608
      },
      "id": "8dc43dd7-c3df-4272-9510-947fcb73a50b",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2400,
        -816
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ca0bf4c3-38e1-4741-8ac3-48d4b8ffe46e",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        -2608,
        -304
      ],
      "webhookId": "ab160448-426e-4cc7-bc0b-cefe0207f8fd",
      "executeOnce": true,
      "typeVersion": 1.3,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e4c322c5-10bf-4416-82f4-67623b6b304e",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -1776,
        -304
      ],
      "executeOnce": false,
      "notesInFlow": false,
      "typeVersion": 3,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "=https://maps.googleapis.com/maps/api/place/details/json?place_id={{ $json.results.place_id }}&fields=name,formatted_address,formatted_phone_number,international_phone_number,geometry,website,plus_code,url&key={{$env.GOOGLE_API_KEY}}",
        "options": {}
      },
      "id": "abce8cc7-55e1-481b-93a9-cdc5f42cace2",
      "name": "Place Details API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1568,
        -160
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "url": "=https://maps.googleapis.com/maps/api/place/textsearch/json",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ $json.chatInput }}"
            },
            {
              "name": "key",
              "value": "={{$env.GOOGLE_API_KEY}}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "068cc9ed-b0c1-4cec-8fad-256525d64673",
      "name": "Places API",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2400,
        -304
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "fieldToSplitOut": "results",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "3c40ff6f-2f14-42d4-9f65-b44694e0ba45",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        -2192,
        -304
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const data = item.json;\n\n  // Convert created_at to MySQL DATETIME if it exists, otherwise use NOW()\n  let createdAt = 'NOW()';\n  if (data.created_at) {\n    const date = new Date(data.created_at);\n    const mysqlDatetime = date.toISOString().slice(0, 19).replace('T', ' ');\n    createdAt = `'${mysqlDatetime}'`;\n  }\n\n  const sql = `\n    INSERT INTO business_listings (\n      name,\n      business_type,\n      address,\n      plus_code,\n      latitude,\n      longitude,\n      map_url,\n      phone,\n      email,\n      website,\n      rating,\n      total_reviews,\n      place_id,\n      source,\n      created_at\n    ) VALUES (\n      ${data.name ? `'${data.name.replace(/'/g, \"''\")}'` : 'NULL'},\n      ${data.business_type ? `'${data.business_type.replace(/'/g, \"''\")}'` : 'NULL'},\n      ${data.address ? `'${data.address.replace(/'/g, \"''\")}'` : 'NULL'},\n      ${data.plus_code ? `'${data.plus_code}'` : 'NULL'},\n      ${data.lat ?? 'NULL'},\n      ${data.lng ?? 'NULL'},\n      ${data.map_url ? `'${data.map_url}'` : 'NULL'},\n      ${data.phone_international ? `'${data.phone_international}'` : data.phone_local ? `'${data.phone_local}'` : 'NULL'},\n      ${data.email ? `'${data.email}'` : 'NULL'},\n      ${data.website ? `'${data.website}'` : 'NULL'},\n      ${data.rating ?? 'NULL'},\n      ${data.total_reviews ?? 'NULL'},\n      ${data.place_id ? `'${data.place_id}'` : 'NULL'},\n      ${data.source ? `'${data.source}'` : `'google_places_api'`},\n      ${createdAt}\n    )\n    ON DUPLICATE KEY UPDATE\n      name = VALUES(name),\n      address = VALUES(address),\n      phone = VALUES(phone),\n      website = VALUES(website),\n      rating = VALUES(rating),\n      total_reviews = VALUES(total_reviews);\n  `;\n\n  return { json: { query: sql.trim() } };\n});\n"
      },
      "id": "be5b5c99-86be-4dbb-b9fb-d1db2912d08f",
      "name": "Generate SQL Insert",
      "type": "n8n-nodes-base.code",
      "position": [
        -1184,
        -160
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "// Get the place_id and original info from the loop input\nconst original = $item(0).$node[\"Loop Over Items\"].json;\nconst details = $json.result || {};\n\n// Combine and clean up data\nreturn [{\n  json: {\n    // ðŸ”¹ Identification\n    place_id: original.place_id || details.place_id || $('Places API').first().json.results[0]?.place_id || null,\n    name: details.name || original.name || null,\n    // ðŸ”¹ Location / Address\n    address: details.formatted_address || original.formatted_address || null,\n    // ðŸ”¹ Contact Information\n    phone_local: details.formatted_phone_number || null,\n    phone_international: details.international_phone_number || null,\n    email: original.email || null,\n    website: details.website || null,\n\n    // ðŸ”¹ Geo / Map Data\n    plus_code: details.plus_code?.global_code || null,\n    map_url: details.url || null,\n    lat: details.geometry?.location?.lat || original.geometry?.location?.lat || null,\n    lng: details.geometry?.location?.lng || original.geometry?.location?.lng || null,\n\n    // ðŸ”¹ Category / Business Info\n    business_type: $('Places API').first().json.results[1].types.join(', '),\n    rating: $('Places API').first().json.results[0].rating || null,\n    total_reviews: $('Places API').first().json.results[0].user_ratings_total || null,\n\n    // ðŸ”¹ Extra / Meta\n    source: \"google_places_api\",\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString()\n  }\n}];\n"
      },
      "id": "a875319a-4913-4a6b-b8e4-7775f9b392dc",
      "name": "Prepare Location Object",
      "type": "n8n-nodes-base.code",
      "position": [
        -1392,
        -160
      ],
      "typeVersion": 2,
      "notes": "Collect results data"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $json.query }}",
        "options": {}
      },
      "id": "48495b94-c70d-4db0-be11-de0bed283541",
      "name": "Insert Record",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -976,
        -160
      ],
      "typeVersion": 2.5,
      "credentials": {
        "mySql": {
          "id": "wWj9yt1coEKbQPqu",
          "name": "MySQL-General-Docker"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// items = array of 20 items from previous node\nlet output = [];\n\nitems.forEach(item => {\n  // item.json.results may be a single object or an array\n  const results = Array.isArray(item.json.results) ? item.json.results : [item.json.results];\n\n  results.forEach(business => {\n    output.push({\n      json: {\n        ...business,\n        created_at: new Date().toISOString().slice(0,19).replace('T',' '),\n        updated_at: new Date().toISOString().slice(0,19).replace('T',' ')\n      }\n    });\n  });\n});\n\nreturn output;\n"
      },
      "id": "103f6c86-d502-4a53-ab15-985d19d99187",
      "name": "Flatten the structure",
      "type": "n8n-nodes-base.code",
      "position": [
        -1984,
        -304
      ],
      "typeVersion": 2
    }
  ],
  "pinData": {},
  "connections": {
    "Split Out": {
      "main": [
        [
          {
            "node": "Flatten the structure",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Places API": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Record": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Place Details API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Place Details API": {
      "main": [
        [
          {
            "node": "Prepare Location Object",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate SQL Insert": {
      "main": [
        [
          {
            "node": "Insert Record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Flatten the structure": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Location Object": {
      "main": [
        [
          {
            "node": "Generate SQL Insert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Places API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8b768746-6044-42dc-8fdb-0c3ec9912ef8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "68c164c2308cd8718faae2f44b0777ea37adc51ed9e2ce7087ee23a08e50ed12"
  },
  "id": "4WxyPaEEEYIsHYMt",
  "tags": []
}